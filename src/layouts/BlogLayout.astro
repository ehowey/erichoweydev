---
import RootLayout from './RootLayout.astro'
import DesktopHeader from '../components/header/DesktopHeader.astro'
import MobileHeader from '../components/header/MobileHeader.astro'
import DesktopNav from '../components/DesktopNav.astro'
import MobileNav from '../components/MobileNav.astro'
import Footer from '../components/Footer.astro'
import BlogHeader from '../components/BlogHeader.astro'
import type { MarkdownHeading } from 'astro'

const { frontmatter, headings } = Astro.props
const ogImageURL = new URL(
  `/api/og-image/?title=${encodeURI(frontmatter.title)}`,
  Astro.site
)

interface ToCItem {
  depth: number
  text: string
  slug: string
  subheadings: Array<{
    depth: number
    text: string
    slug: string
  }>
}

function buildToc(headings: MarkdownHeading[]) {
  const toc: ToCItem[] = []
  const parentHeadings = new Map()
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] }
    parentHeadings.set(heading.depth, heading)
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading)
    } else if (heading.depth === 3) {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading)
    }
  })
  return toc
}

const toc = buildToc(headings)
---

<RootLayout
  title={frontmatter.title}
  description={frontmatter.description}
  ogImageURL={ogImageURL}
>
  <div>
    <DesktopHeader />
    <MobileHeader />
    <MobileNav />
    <div class="mt-36 md:mt-56 lg:mt-60 lg:grid lg:grid-cols-9">
      <DesktopNav />
      <main
        class="md:prose-lg prose relative prose-pre:mb-7 prose-pre:rounded-sm lg:col-start-3 lg:col-end-10 lg:row-start-1 lg:row-end-2"
      >
        <div class="grid grid-cols-9 gap-x-8">
          <div class="col-start-1 col-end-10 row-start-1 row-end-2">
            <BlogHeader frontmatter={frontmatter} />
          </div>
          <div
            class="col-start-1 col-end-10 row-start-2 row-end-3 mt-12 max-w-2xl scroll-mt-8 px-4 prose-headings:scroll-mt-8 first:prose-p:mt-0 md:col-end-7 lg:col-end-8"
          >
            <slot />
          </div>
          {
            toc.length > 0 && (
              <div class="not-prose lg:cold-start-8 sticky top-[150px] col-start-7 col-end-10 row-start-2 row-end-3 mt-12 hidden self-start pr-4 md:block">
                <h2 class="text-xl font-bold uppercase text-zinc-100">
                  Page contents
                </h2>
                <nav class="mt-2 text-base text-zinc-400">
                  <ol>
                    {toc.map((heading) => (
                      <li>
                        <a
                          href={'#' + heading.slug}
                          class="transition-colors duration-150 hover:text-sky-400"
                        >
                          &mdash; {heading.text}
                        </a>
                        {heading.subheadings.length > 0 && (
                          <ol class="pl-4 text-xs">
                            {heading.subheadings.map((subheading) => (
                              <li>
                                <a
                                  href={'#' + subheading.slug}
                                  class="transition-colors duration-150 hover:text-sky-400"
                                >
                                  {subheading.text}
                                </a>
                              </li>
                            ))}
                          </ol>
                        )}
                      </li>
                    ))}
                  </ol>
                </nav>
              </div>
            )
          }
        </div>
      </main>
    </div>
  </div>
  <Footer />
</RootLayout>
