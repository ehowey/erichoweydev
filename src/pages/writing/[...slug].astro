---
import { getCollection, type CollectionEntry } from 'astro:content'
import HeaderBlog from '~/components/HeaderBlog.astro'
import ContainerProse from '~/components/ContainerProse.astro'
import LayoutDefault from '~/components/layout/LayoutDefault.astro'
import TableOfContentsBlog from '~/components/TableOfContentsBlog.astro'

export async function getStaticPaths() {
  const blogEntries = await (
    await getCollection('writing')
  ).filter((post) => {
    if (import.meta.env.DEV) {
      return post
    }
    if (post.data.published === true) {
      return post
    }
  })
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

interface Props {
  entry: CollectionEntry<'writing'>
}

const { entry } = Astro.props
const frontmatter = entry.data
const { Content, headings } = await entry.render()
const ogImageURL = new URL(
  `/api/og-image/?title=${encodeURI(frontmatter.title)}`,
  Astro.site,
)
---

<LayoutDefault
  title={frontmatter.title}
  ogImageURL={ogImageURL}
  description={frontmatter.description}
>
  <div slot="main">
    <ContainerProse>
      <HeaderBlog frontmatter={frontmatter} />
      <Content />
    </ContainerProse>
  </div>
  <div slot="aside">
    <TableOfContentsBlog headings={headings} />
  </div>
</LayoutDefault>
